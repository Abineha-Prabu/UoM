;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;;
;; Decompilation date: 2025-10-15 21:26:52
;; Architecture: x86
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x401000 -- 0x40101b
0x401000:   f3 0f 1e fa                  	endbr64 
0x401004:   48 83 ec 08                  	sub rsp, 8
0x401008:   48 8b 05 d1 2f 00 00         	mov rax, qword ptr [rip + 0x2fd1]
0x40100f:   48 85 c0                     	test rax, rax
0x401012:   74 02                        	je 0x401016 <_init+0x16>
0x401014:   ff d0                        	call rax <__gmon_start__>
0x401016:   48 83 c4 08                  	add rsp, 8
0x40101a:   c3                           	ret 
; section: .plt
; data inside code section at 0x401020 -- 0x401090
0x401020:   ff 35 ca 2f 00 00 ff 25  cc 2f 00 00 0f 1f 40 00   |.5./...%./....@.|
0x401030:   f3 0f 1e fa 68 00 00 00  00 e9 e2 ff ff ff 66 90   |....h.........f.|
0x401040:   f3 0f 1e fa 68 01 00 00  00 e9 d2 ff ff ff 66 90   |....h.........f.|
0x401050:   f3 0f 1e fa 68 02 00 00  00 e9 c2 ff ff ff 66 90   |....h.........f.|
0x401060:   f3 0f 1e fa 68 03 00 00  00 e9 b2 ff ff ff 66 90   |....h.........f.|
0x401070:   f3 0f 1e fa 68 04 00 00  00 e9 a2 ff ff ff 66 90   |....h.........f.|
0x401080:   f3 0f 1e fa 68 05 00 00  00 e9 92 ff ff ff 66 90   |....h.........f.|
; section: .plt.sec
; function: function_401090 at 0x401090 -- 0x40109a
0x401090:   f3 0f 1e fa                  	endbr64 
0x401094:   ff 25 66 2f 00 00            	jmp qword ptr [rip + 0x2f66] <puts>
; data inside code section at 0x40109a -- 0x4010a0
0x40109a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_4010a0 at 0x4010a0 -- 0x4010aa
0x4010a0:   f3 0f 1e fa                  	endbr64 
0x4010a4:   ff 25 5e 2f 00 00            	jmp qword ptr [rip + 0x2f5e] <__stack_chk_fail>
; data inside code section at 0x4010aa -- 0x4010b0
0x4010aa:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_4010b0 at 0x4010b0 -- 0x4010ba
0x4010b0:   f3 0f 1e fa                  	endbr64 
0x4010b4:   ff 25 56 2f 00 00            	jmp qword ptr [rip + 0x2f56] <printf>
; data inside code section at 0x4010ba -- 0x4010c0
0x4010ba:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_4010c0 at 0x4010c0 -- 0x4010ca
0x4010c0:   f3 0f 1e fa                  	endbr64 
0x4010c4:   ff 25 4e 2f 00 00            	jmp qword ptr [rip + 0x2f4e] <strcspn>
; data inside code section at 0x4010ca -- 0x4010d0
0x4010ca:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_4010d0 at 0x4010d0 -- 0x4010da
0x4010d0:   f3 0f 1e fa                  	endbr64 
0x4010d4:   ff 25 46 2f 00 00            	jmp qword ptr [rip + 0x2f46] <fgets>
; data inside code section at 0x4010da -- 0x4010e0
0x4010da:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_4010e0 at 0x4010e0 -- 0x4010ea
0x4010e0:   f3 0f 1e fa                  	endbr64 
0x4010e4:   ff 25 3e 2f 00 00            	jmp qword ptr [rip + 0x2f3e] <strcmp>
; data inside code section at 0x4010ea -- 0x4010f0
0x4010ea:   66 0f 1f 44 00 00                                  |f..D..          |
; section: .text
; function: _start at 0x4010f0 -- 0x401116
0x4010f0:   f3 0f 1e fa                  	endbr64 
0x4010f4:   31 ed                        	xor ebp, ebp
0x4010f6:   49 89 d1                     	mov r9, rdx
0x4010f9:   5e                           	pop rsi
0x4010fa:   48 89 e2                     	mov rdx, rsp
0x4010fd:   48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x401101:   50                           	push rax
0x401102:   54                           	push rsp
0x401103:   45 31 c0                     	xor r8d, r8d
0x401106:   31 c9                        	xor ecx, ecx
0x401108:   48 c7 c7 35 12 40 00         	mov rdi, 0x401235
0x40110f:   ff 15 c3 2e 00 00            	call qword ptr [rip + 0x2ec3] <__libc_start_main>
0x401115:   f4                           	hlt 
; data inside code section at 0x401116 -- 0x401120
0x401116:   66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: _dl_relocate_static_pie at 0x401120 -- 0x401125
0x401120:   f3 0f 1e fa                  	endbr64 
0x401124:   c3                           	ret 
; data inside code section at 0x401125 -- 0x401130
0x401125:   66 2e 0f 1f 84 00 00 00  00 00 90                  |f..........     |
; function: deregister_tm_clones at 0x401130 -- 0x401151
0x401130:   b8 40 40 40 00               	mov eax, 0x404040
0x401135:   48 3d 40 40 40 00            	cmp rax, 0x404040
0x40113b:   74 13                        	je 0x401150 <deregister_tm_clones+0x20>
0x40113d:   b8 00 00 00 00               	mov eax, 0
0x401142:   48 85 c0                     	test rax, rax
0x401145:   74 09                        	je 0x401150 <deregister_tm_clones+0x20>
0x401147:   bf 40 40 40 00               	mov edi, 0x404040
0x40114c:   ff e0                        	jmp rax
; data inside code section at 0x40114e -- 0x401150
0x40114e:   66 90                                              |f.              |
0x401150:   c3                           	ret 
; data inside code section at 0x401151 -- 0x401160
0x401151:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: register_tm_clones at 0x401160 -- 0x401191
0x401160:   be 40 40 40 00               	mov esi, 0x404040
0x401165:   48 81 ee 40 40 40 00         	sub rsi, 0x404040
0x40116c:   48 89 f0                     	mov rax, rsi
0x40116f:   48 c1 ee 3f                  	shr rsi, 0x3f
0x401173:   48 c1 f8 03                  	sar rax, 3
0x401177:   48 01 c6                     	add rsi, rax
0x40117a:   48 d1 fe                     	sar rsi, 1
0x40117d:   74 11                        	je 0x401190 <register_tm_clones+0x30>
0x40117f:   b8 00 00 00 00               	mov eax, 0
0x401184:   48 85 c0                     	test rax, rax
0x401187:   74 07                        	je 0x401190 <register_tm_clones+0x30>
0x401189:   bf 40 40 40 00               	mov edi, 0x404040
0x40118e:   ff e0                        	jmp rax
0x401190:   c3                           	ret 
; data inside code section at 0x401191 -- 0x4011a0
0x401191:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: __do_global_dtors_aux at 0x4011a0 -- 0x4011c1
0x4011a0:   f3 0f 1e fa                  	endbr64 
0x4011a4:   80 3d 9d 2e 00 00 00         	cmp byte ptr [rip + 0x2e9d], 0
0x4011ab:   75 13                        	jne 0x4011c0 <__do_global_dtors_aux+0x20>
0x4011ad:   55                           	push rbp
0x4011ae:   48 89 e5                     	mov rbp, rsp
0x4011b1:   e8 7a ff ff ff               	call 0x401130 <deregister_tm_clones>
0x4011b6:   c6 05 8b 2e 00 00 01         	mov byte ptr [rip + 0x2e8b], 1
0x4011bd:   5d                           	pop rbp
0x4011be:   c3                           	ret 
; data inside code section at 0x4011bf -- 0x4011c0
0x4011bf:   90                                                 |.               |
0x4011c0:   c3                           	ret 
; data inside code section at 0x4011c1 -- 0x4011d0
0x4011c1:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 40 00      |ff...........@. |
; function: frame_dummy at 0x4011d0 -- 0x4011d6
0x4011d0:   f3 0f 1e fa                  	endbr64 
0x4011d4:   eb 8a                        	jmp 0x401160 <register_tm_clones>
; function: set_password at 0x4011d6 -- 0x401235
0x4011d6:   f3 0f 1e fa                  	endbr64 
0x4011da:   55                           	push rbp
0x4011db:   48 89 e5                     	mov rbp, rsp
0x4011de:   c6 05 7b 2e 00 00 70         	mov byte ptr [rip + 0x2e7b], 0x70
0x4011e5:   c6 05 75 2e 00 00 65         	mov byte ptr [rip + 0x2e75], 0x65
0x4011ec:   c6 05 6f 2e 00 00 6e         	mov byte ptr [rip + 0x2e6f], 0x6e
0x4011f3:   c6 05 69 2e 00 00 65         	mov byte ptr [rip + 0x2e69], 0x65
0x4011fa:   c6 05 63 2e 00 00 74         	mov byte ptr [rip + 0x2e63], 0x74
0x401201:   c6 05 5d 2e 00 00 72         	mov byte ptr [rip + 0x2e5d], 0x72
0x401208:   c6 05 57 2e 00 00 61         	mov byte ptr [rip + 0x2e57], 0x61
0x40120f:   c6 05 51 2e 00 00 74         	mov byte ptr [rip + 0x2e51], 0x74
0x401216:   c6 05 4b 2e 00 00 69         	mov byte ptr [rip + 0x2e4b], 0x69
0x40121d:   c6 05 45 2e 00 00 6f         	mov byte ptr [rip + 0x2e45], 0x6f
0x401224:   c6 05 3f 2e 00 00 6e         	mov byte ptr [rip + 0x2e3f], 0x6e
0x40122b:   c6 05 39 2e 00 00 00         	mov byte ptr [rip + 0x2e39], 0
0x401232:   90                           	nop 
0x401233:   5d                           	pop rbp
0x401234:   c3                           	ret 
; function: main at 0x401235 -- 0x40130f
0x401235:   f3 0f 1e fa                  	endbr64 
0x401239:   55                           	push rbp
0x40123a:   48 89 e5                     	mov rbp, rsp
0x40123d:   48 81 ec 90 00 00 00         	sub rsp, 0x90
0x401244:   64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x40124d:   48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x401251:   31 c0                        	xor eax, eax
0x401253:   b8 00 00 00 00               	mov eax, 0
0x401258:   e8 79 ff ff ff               	call 0x4011d6 <set_password>
0x40125d:   48 8d 05 a0 0d 00 00         	lea rax, [rip + 0xda0]
0x401264:   48 89 c7                     	mov rdi, rax
0x401267:   e8 24 fe ff ff               	call 0x401090 <puts>
0x40126c:   48 8b 15 cd 2d 00 00         	mov rdx, qword ptr [rip + 0x2dcd]
0x401273:   48 8d 85 70 ff ff ff         	lea rax, [rbp - 0x90]
0x40127a:   be 80 00 00 00               	mov esi, 0x80
0x40127f:   48 89 c7                     	mov rdi, rax
0x401282:   e8 49 fe ff ff               	call 0x4010d0 <fgets>
0x401287:   48 8d 85 70 ff ff ff         	lea rax, [rbp - 0x90]
0x40128e:   48 8d 15 8c 0d 00 00         	lea rdx, [rip + 0xd8c]
0x401295:   48 89 d6                     	mov rsi, rdx
0x401298:   48 89 c7                     	mov rdi, rax
0x40129b:   e8 20 fe ff ff               	call 0x4010c0 <strcspn>
0x4012a0:   c6 84 05 70 ff ff ff 00      	mov byte ptr [rbp + rax - 0x90], 0
0x4012a8:   48 8d 85 70 ff ff ff         	lea rax, [rbp - 0x90]
0x4012af:   48 8d 15 aa 2d 00 00         	lea rdx, [rip + 0x2daa]
0x4012b6:   48 89 d6                     	mov rsi, rdx
0x4012b9:   48 89 c7                     	mov rdi, rax
0x4012bc:   e8 1f fe ff ff               	call 0x4010e0 <strcmp>
0x4012c1:   85 c0                        	test eax, eax
0x4012c3:   75 11                        	jne 0x4012d6 <main+0xa1>
0x4012c5:   48 8d 05 57 0d 00 00         	lea rax, [rip + 0xd57]
0x4012cc:   48 89 c7                     	mov rdi, rax
0x4012cf:   e8 bc fd ff ff               	call 0x401090 <puts>
0x4012d4:   eb 1e                        	jmp 0x4012f4 <main+0xbf>
0x4012d6:   48 8d 05 83 2d 00 00         	lea rax, [rip + 0x2d83]
0x4012dd:   48 89 c6                     	mov rsi, rax
0x4012e0:   48 8d 05 57 0d 00 00         	lea rax, [rip + 0xd57]
0x4012e7:   48 89 c7                     	mov rdi, rax
0x4012ea:   b8 00 00 00 00               	mov eax, 0
0x4012ef:   e8 bc fd ff ff               	call 0x4010b0 <printf>
0x4012f4:   b8 00 00 00 00               	mov eax, 0
0x4012f9:   48 8b 55 f8                  	mov rdx, qword ptr [rbp - 8]
0x4012fd:   64 48 2b 14 25 28 00 00 00   	sub rdx, qword ptr fs:[0x28]
0x401306:   74 05                        	je 0x40130d <main+0xd8>
0x401308:   e8 93 fd ff ff               	call 0x4010a0 <__stack_chk_fail>
0x40130d:   c9                           	leave 
0x40130e:   c3                           	ret 
; section: .fini
; function: _fini at 0x401310 -- 0x40131d
0x401310:   f3 0f 1e fa                  	endbr64 
0x401314:   48 83 ec 08                  	sub rsp, 8
0x401318:   48 83 c4 08                  	add rsp, 8
0x40131c:   c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x400318:   2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x400328:   78 38 36 2d 36 34 2e 73  6f 2e 32 00 ??            |x86-64.so.2.?   |
; section: .gnu.hash
0x4003b0:   02 00 00 00 09 00 00 00  01 00 00 00 06 00 00 00   |................|
0x4003c0:   00 00 20 00 80 00 00 00  00 00 00 00 09 00 00 00   |.. .............|
0x4003d0:   67 55 61 10 ??                                     |gUa.?           |
; section: .dynsym
0x4003d8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4003e8:   00 00 00 00 00 00 00 00  2b 00 00 00 12 00 00 00   |........+.......|
0x4003f8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400408:   0d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400418:   00 00 00 00 00 00 00 00  12 00 00 00 12 00 00 00   |................|
0x400428:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400438:   3d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |=...............|
0x400448:   00 00 00 00 00 00 00 00  23 00 00 00 12 00 00 00   |........#.......|
0x400458:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400468:   01 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400478:   00 00 00 00 00 00 00 00  44 00 00 00 12 00 00 00   |........D.......|
0x400488:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400498:   76 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |v... ...........|
0x4004a8:   00 00 00 00 00 00 00 00  07 00 00 00 11 00 1a 00   |................|
0x4004b8:   40 40 40 00 00 00 00 00  08 00 00 00 00 00 00 00   |@@@.............|
0x4004c8:   00                                                 |.               |
; section: .dynstr
0x4004c8:   00 66 67 65 74 73 00 73  74 64 69 6e 00 70 75 74   |.fgets.stdin.put|
0x4004d8:   73 00 5f 5f 73 74 61 63  6b 5f 63 68 6b 5f 66 61   |s.__stack_chk_fa|
0x4004e8:   69 6c 00 73 74 72 63 73  70 6e 00 5f 5f 6c 69 62   |il.strcspn.__lib|
0x4004f8:   63 5f 73 74 61 72 74 5f  6d 61 69 6e 00 70 72 69   |c_start_main.pri|
0x400508:   6e 74 66 00 73 74 72 63  6d 70 00 6c 69 62 63 2e   |ntf.strcmp.libc.|
0x400518:   73 6f 2e 36 00 47 4c 49  42 43 5f 32 2e 34 00 47   |so.6.GLIBC_2.4.G|
0x400528:   4c 49 42 43 5f 32 2e 32  2e 35 00 47 4c 49 42 43   |LIBC_2.2.5.GLIBC|
0x400538:   5f 32 2e 33 34 00 5f 5f  67 6d 6f 6e 5f 73 74 61   |_2.34.__gmon_sta|
0x400548:   72 74 5f 5f 00 ??                                  |rt__.?          |
; section: .gnu.version
0x40054e:   00 00 02 00 03 00 04 00  03 00 03 00 03 00 03 00   |................|
0x40055e:   01 00 03 00 ??                                     |....?           |
; section: .gnu.version_r
0x400568:   01 00 03 00 4b 00 00 00  10 00 00 00 00 00 00 00   |....K...........|
0x400578:   14 69 69 0d 00 00 04 00  55 00 00 00 10 00 00 00   |.ii.....U.......|
0x400588:   75 1a 69 09 00 00 03 00  5f 00 00 00 10 00 00 00   |u.i....._.......|
0x400598:   b4 91 96 06 00 00 02 00  6b 00 00 00 00 00 00 00   |........k.......|
0x4005a8:   d8                                                 |.               |
; section: .rela.dyn
0x4005a8:   d8 3f 40 00 00 00 00 00  06 00 00 00 01 00 00 00   |.?@.............|
0x4005b8:   00 00 00 00 00 00 00 00  e0 3f 40 00 00 00 00 00   |.........?@.....|
0x4005c8:   06 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4005d8:   40 40 40 00 00 00 00 00  05 00 00 00 09 00 00 00   |@@@.............|
0x4005e8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .rela.plt
0x4005f0:   00 40 40 00 00 00 00 00  07 00 00 00 02 00 00 00   |.@@.............|
0x400600:   00 00 00 00 00 00 00 00  08 40 40 00 00 00 00 00   |.........@@.....|
0x400610:   07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400620:   10 40 40 00 00 00 00 00  07 00 00 00 04 00 00 00   |.@@.............|
0x400630:   00 00 00 00 00 00 00 00  18 40 40 00 00 00 00 00   |.........@@.....|
0x400640:   07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400650:   20 40 40 00 00 00 00 00  07 00 00 00 06 00 00 00   | @@.............|
0x400660:   00 00 00 00 00 00 00 00  28 40 40 00 00 00 00 00   |........(@@.....|
0x400670:   07 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0x400680:   ??                                                 |?               |
; section: .rodata
0x402000:   01 00 02 00                                        |....            |
0x402004:   50 6c 65 61 73 65 20 69  6e 70 75 74 20 79 6f 75   |Please input you|   "Please input your password: "
0x402014:   72 20 70 61 73 73 77 6f  72 64 3a 20 00            |r password: .   |
0x402021:   0a 00                                              |..              |
0x402023:   41 75 74 68 65 6e 74 69  63 61 74 69 6f 6e 20 73   |Authentication s|   "Authentication successful!"
0x402033:   75 63 63 65 73 73 66 75  6c 21 00                  |uccessful!.     |
0x40203e:   57 72 6f 6e 67 20 70 61  73 73 77 6f 72 64 2e 0a   |Wrong password..|   "Wrong password.\n"
0x40204e:   00                                                 |.               |
0x40204f:   ??                                                 |?               |
; section: .eh_frame_hdr
0x402050:   01 1b 03 3b 3c 00 00 00  06 00 00 00 d0 ef ff ff   |...;<...........|
0x402060:   80 00 00 00 40 f0 ff ff  a8 00 00 00 a0 f0 ff ff   |....@...........|
0x402070:   58 00 00 00 d0 f0 ff ff  6c 00 00 00 86 f1 ff ff   |X.......l.......|
0x402080:   c0 00 00 00 e5 f1 ff ff  e0 00 00 00 ??            |............?   |
; section: .eh_frame
0x402090:   14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x4020a0:   1b 0c 07 08 90 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x4020b0:   40 f0 ff ff 26 00 00 00  00 44 07 10 10 00 00 00   |@...&....D......|
0x4020c0:   30 00 00 00 5c f0 ff ff  05 00 00 00 00 00 00 00   |0...\...........|
0x4020d0:   24 00 00 00 44 00 00 00  48 ef ff ff 70 00 00 00   |$...D...H...p...|
0x4020e0:   00 0e 10 46 0e 18 4a 0f  0b 77 08 80 00 3f 1a 39   |...F..J..w...?.9|
0x4020f0:   2a 33 24 22 00 00 00 00  14 00 00 00 6c 00 00 00   |*3$"........l...|
0x402100:   90 ef ff ff 60 00 00 00  00 00 00 00 00 00 00 00   |....`...........|
0x402110:   1c 00 00 00 84 00 00 00  be f0 ff ff 5f 00 00 00   |............_...|
0x402120:   00 45 0e 10 86 02 43 0d  06 02 56 0c 07 08 00 00   |.E....C...V.....|
0x402130:   1c 00 00 00 a4 00 00 00  fd f0 ff ff da 00 00 00   |................|
0x402140:   00 45 0e 10 86 02 43 0d  06 02 d1 0c 07 08 00 00   |.E....C.........|
0x402150:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x403df8:   d0 11 40 00 00 00 00 00  a0                        |..@......       |
; section: .fini_array
0x403e00:   a0 11 40 00 00 00 00 00  01                        |..@......       |
; section: .dynamic
0x403e08:   01 00 00 00 00 00 00 00  4b 00 00 00 00 00 00 00   |........K.......|
0x403e18:   0c 00 00 00 00 00 00 00  00 10 40 00 00 00 00 00   |..........@.....|
0x403e28:   0d 00 00 00 00 00 00 00  10 13 40 00 00 00 00 00   |..........@.....|
0x403e38:   19 00 00 00 00 00 00 00  f8 3d 40 00 00 00 00 00   |.........=@.....|
0x403e48:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x403e58:   1a 00 00 00 00 00 00 00  00 3e 40 00 00 00 00 00   |.........>@.....|
0x403e68:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x403e78:   f5 fe ff 6f 00 00 00 00  b0 03 40 00 00 00 00 00   |...o......@.....|
0x403e88:   05 00 00 00 00 00 00 00  c8 04 40 00 00 00 00 00   |..........@.....|
0x403e98:   06 00 00 00 00 00 00 00  d8 03 40 00 00 00 00 00   |..........@.....|
0x403ea8:   0a 00 00 00 00 00 00 00  85 00 00 00 00 00 00 00   |................|
0x403eb8:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x403ec8:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403ed8:   03 00 00 00 00 00 00 00  e8 3f 40 00 00 00 00 00   |.........?@.....|
0x403ee8:   02 00 00 00 00 00 00 00  90 00 00 00 00 00 00 00   |................|
0x403ef8:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x403f08:   17 00 00 00 00 00 00 00  f0 05 40 00 00 00 00 00   |..........@.....|
0x403f18:   07 00 00 00 00 00 00 00  a8 05 40 00 00 00 00 00   |..........@.....|
0x403f28:   08 00 00 00 00 00 00 00  48 00 00 00 00 00 00 00   |........H.......|
0x403f38:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x403f48:   fe ff ff 6f 00 00 00 00  68 05 40 00 00 00 00 00   |...o....h.@.....|
0x403f58:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x403f68:   f0 ff ff 6f 00 00 00 00  4e 05 40 00 00 00 00 00   |...o....N.@.....|
0x403f78:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403f88:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403f98:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403fa8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403fb8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403fc8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403fd8:   00                                                 |.               |
; section: .got
0x403fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x403fe8:   08                                                 |.               |
; section: .got.plt
0x403fe8:   08 3e 40 00 00 00 00 00  00 00 00 00 00 00 00 00   |.>@.............|
0x403ff8:   00 00 00 00 00 00 00 00  30 10 40 00 00 00 00 00   |........0.@.....|
0x404008:   40 10 40 00 00 00 00 00  50 10 40 00 00 00 00 00   |@.@.....P.@.....|
0x404018:   60 10 40 00 00 00 00 00  70 10 40 00 00 00 00 00   |`.@.....p.@.....|
0x404028:   80 10 40 00 00 00 00 00  00                        |..@......       |
; section: .data
0x404030:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x404040:   00                                                 |.               |
